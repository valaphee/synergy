/* AUTO-GENERATED FILE. DO NOT MODIFY.
 */
syntax = "proto2";

package bgs.protocol.sns.v1;

import "bgs/low/pb/client/rpc_types.proto";
import "bgs/low/pb/client/account_types.proto";

option java_multiple_files = true;
option java_generic_services = true;

option cc_generic_services = false;

message GetFacebookAuthCodeRequest {
}

message GetFacebookAuthCodeResponse {
  optional string fb_code = 1;
  optional string redirect_uri = 2 [deprecated = true];
  optional string fb_id = 3 [deprecated = true];
}

message GetFacebookBnetFriendsRequest {
  enum ProfilePictureType {
    SMALL = 0;
    NORMAL = 1;
    LARGE = 2;
    SQUARE = 3;
  }
  
  optional .bgs.protocol.sns.v1.GetFacebookBnetFriendsRequest.ProfilePictureType profile_picture_type = 2 [default = SMALL];
  optional uint32 token = 3;
}

message GetFacebookSettingsResponse {
  optional string app_id = 1;
  optional string redirect_uri = 2;
  optional string api_version = 3;
}

message GetFacebookAccountLinkStatusRequest {
}

message GetFacebookAccountLinkStatusResponse {
  optional bool account_linked = 1;
  optional string fb_id = 2;
  optional string display_name = 3;
}

message GetGoogleAuthTokenRequest {
}

message GetGoogleAuthTokenResponse {
  optional string access_token = 1;
}

message GetGoogleSettingsResponse {
  optional string client_id = 1;
}

message GetGoogleAccountLinkStatusRequest {
}

message GetGoogleAccountLinkStatusResponse {
  optional bool account_linked = 1;
  optional string google_id = 2;
  optional string display_name = 3;
}

message FacebookBnetFriendListNotification {
  optional uint32 error_code = 1;
  optional .bgs.protocol.account.v1.Identity identity = 2;
  repeated .bgs.protocol.sns.v1.FacebookBnetFriend friend_list = 3;
  optional bool list_end = 4;
  optional uint32 token = 5;
  optional string fb_id = 6;
}

message FacebookBnetFriend {
  optional .bgs.protocol.account.v1.AccountId bnet_id = 1;
  optional string fb_id = 2;
  optional string last_name = 3;
  optional string first_name = 4;
  optional string profile_picture = 5;
  optional string display_name = 6;
}

message FacebookBnetFriendListNotificationResponse {
  optional bool continue = 1 [default = true];
}

service SocialNetworkService {
  option (service_options).descriptor_name = "bnet.protocol.sns.SocialNetworkService";
  option (service_options).shard_name = "social_network";
  option (service_options).version = 1;
  option (sdk_service_options).outbound = true;
  
  rpc GetFacebookAuthCode (.bgs.protocol.sns.v1.GetFacebookAuthCodeRequest) returns (.bgs.protocol.sns.v1.GetFacebookAuthCodeResponse) {
    option (method_options).id = 1;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_BATTLE_NET_ACCOUNT;
  }
  
  rpc GetFacebookBnetFriends (.bgs.protocol.sns.v1.GetFacebookBnetFriendsRequest) returns (.bgs.protocol.NoData) {
    option (method_options).id = 2;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_BATTLE_NET_ACCOUNT;
  }
  
  rpc GetFacebookSettings (.bgs.protocol.NoData) returns (.bgs.protocol.sns.v1.GetFacebookSettingsResponse) {
    option (method_options).id = 3;
  }
  
  rpc GetFacebookAccountLinkStatus (.bgs.protocol.sns.v1.GetFacebookAccountLinkStatusRequest) returns (.bgs.protocol.sns.v1.GetFacebookAccountLinkStatusResponse) {
    option (method_options).id = 4;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_BATTLE_NET_ACCOUNT;
  }
  
  rpc GetGoogleAuthToken (.bgs.protocol.sns.v1.GetGoogleAuthTokenRequest) returns (.bgs.protocol.sns.v1.GetGoogleAuthTokenResponse) {
    option (method_options).id = 5;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_BATTLE_NET_ACCOUNT;
  }
  
  rpc GetGoogleSettings (.bgs.protocol.NoData) returns (.bgs.protocol.sns.v1.GetGoogleSettingsResponse) {
    option (method_options).id = 6;
  }
  
  rpc GetGoogleAccountLinkStatus (.bgs.protocol.sns.v1.GetGoogleAccountLinkStatusRequest) returns (.bgs.protocol.sns.v1.GetGoogleAccountLinkStatusResponse) {
    option (method_options).id = 7;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_BATTLE_NET_ACCOUNT;
  }
}

service SocialNetworkListener {
  option (service_options).descriptor_name = "bnet.protocol.sns.SocialNetworkListener";
  option (service_options).type = SERVICE_TYPE_RPC_DIRECT;
  option (sdk_service_options).inbound = true;
  
  rpc OnFacebookBnetFriendListReceived (.bgs.protocol.sns.v1.FacebookBnetFriendListNotification) returns (.bgs.protocol.sns.v1.FacebookBnetFriendListNotificationResponse) {
    option (method_options).id = 1;
  }
}
