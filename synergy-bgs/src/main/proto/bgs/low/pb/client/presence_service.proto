/* AUTO-GENERATED FILE. DO NOT MODIFY.
 */
syntax = "proto2";

package bgs.protocol.presence.v1;

import "bgs/low/pb/client/entity_types.proto";
import "bgs/low/pb/client/presence_types.proto";
import "bgs/low/pb/client/rpc_types.proto";

option java_multiple_files = true;
option java_generic_services = true;

option cc_generic_services = false;

message SubscribeRequest {
  optional .bgs.protocol.EntityId agent_id = 1;
  required .bgs.protocol.EntityId entity_id = 2;
  required uint64 object_id = 3;
  repeated fixed32 program = 4;
  repeated .bgs.protocol.presence.v1.FieldKey key = 6;
}

message UnsubscribeRequest {
  optional .bgs.protocol.EntityId agent_id = 1;
  required .bgs.protocol.EntityId entity_id = 2;
  optional uint64 object_id = 3;
}

message UpdateRequest {
  required .bgs.protocol.EntityId entity_id = 1;
  repeated .bgs.protocol.presence.v1.FieldOperation field_operation = 2;
  optional bool no_create = 3;
  optional .bgs.protocol.EntityId agent_id = 4;
}

message QueryRequest {
  required .bgs.protocol.EntityId entity_id = 1;
  repeated .bgs.protocol.presence.v1.FieldKey key = 2;
  optional .bgs.protocol.EntityId agent_id = 3;
}

message QueryResponse {
  repeated .bgs.protocol.presence.v1.Field field = 2;
}

message BatchSubscribeRequest {
  optional .bgs.protocol.EntityId agent_id = 1;
  repeated .bgs.protocol.EntityId entity_id = 2;
  repeated fixed32 program = 3;
  repeated .bgs.protocol.presence.v1.FieldKey key = 4;
  optional uint64 object_id = 5;
}

message SubscribeResult {
  optional .bgs.protocol.EntityId entity_id = 1;
  optional uint32 result = 2;
}

message BatchSubscribeResponse {
  repeated .bgs.protocol.presence.v1.SubscribeResult subscribe_failed = 1;
}

message BatchUnsubscribeRequest {
  optional .bgs.protocol.EntityId agent_id = 1;
  repeated .bgs.protocol.EntityId entity_id = 2;
  optional uint64 object_id = 3;
}

service PresenceService {
  option (service_options).descriptor_name = "bnet.protocol.presence.PresenceService";
  option (service_options).shard_name = "presence_aggregator";
  option (service_options).resolve_client_instance = true;
  option (sdk_service_options).outbound = true;

  rpc Subscribe (.bgs.protocol.presence.v1.SubscribeRequest) returns (.bgs.protocol.NoData) {
    option (method_options).id = 1;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_INSTANCE_ID;
  }

  rpc Unsubscribe (.bgs.protocol.presence.v1.UnsubscribeRequest) returns (.bgs.protocol.NoData) {
    option (method_options).id = 2;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_INSTANCE_ID;
  }

  rpc Update (.bgs.protocol.presence.v1.UpdateRequest) returns (.bgs.protocol.NoData) {
    option (method_options).id = 3;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_INSTANCE_ID;
  }

  rpc Query (.bgs.protocol.presence.v1.QueryRequest) returns (.bgs.protocol.presence.v1.QueryResponse) {
    option (method_options).id = 4;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_INSTANCE_ID;
  }

  rpc BatchSubscribe (.bgs.protocol.presence.v1.BatchSubscribeRequest) returns (.bgs.protocol.presence.v1.BatchSubscribeResponse) {
    option (method_options).id = 8;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_INSTANCE_ID;
  }

  rpc BatchUnsubscribe (.bgs.protocol.presence.v1.BatchUnsubscribeRequest) returns (.bgs.protocol.NoData) {
    option (method_options).id = 9;
    option (method_options).client_identity_routing = CLIENT_IDENTITY_ROUTING_INSTANCE_ID;
  }
}
